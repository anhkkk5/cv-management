import React from "react";
import { useNavigate } from "react-router-dom";
import { Row, Col, Form, Input, Button, message, Typography } from "antd";
import { EyeInvisibleOutlined, EyeTwoTone } from "@ant-design/icons";
import { generateToken } from "../helpers/generateToken";
import { checkExits } from "../services/getAllCompany/companyServices";
import { createCompany } from "../services/getAllCompany/companyServices";
import "../pages/login/style.css";

const { Title, Text } = Typography;

function Register() {
  const [messageApi, contextHolder] = message.useMessage();
  const [form] = Form.useForm();
  const navigate = useNavigate();

  // Define validation rules
  const rules = [
    {
      required: true,
      message: "Tr∆∞·ªùng n√†y l√† b·∫Øt bu·ªôc!",
    },
  ];

  const onFinish = async (values) => {
    try {
      console.log("Registration attempt:", values);

      // Validate password confirmation
      if (values.password !== values.confirmPassword) {
        messageApi.error("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!");
        return;
      }

      // Generate token and prepare data
      values.token = generateToken();

      // Check if email already exists
      const checkExistEmail = await checkExits("email", values.email);

      if (checkExistEmail.length > 0) {
        messageApi.error("Email ƒë√£ t·ªìn t·∫°i!");
        return;
      }

      // If no duplicates, proceed with registration
      const result = await createCompany(values);

      if (result) {
        messageApi.success(
          "ƒêƒÉng k√Ω th√†nh c√¥ng! Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi n·ªÅn t·∫£ng c·ªßa ch√∫ng t√¥i üéâ"
        );
        form.resetFields();
        // Wait a bit for user to see the success message before navigating
        setTimeout(() => {
          navigate("/login");
        }, 2000);
      } else {
        messageApi.error("ƒêƒÉng k√Ω th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i!");
      }
    } catch (error) {
      messageApi.error("ƒê√£ c√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i!");
      console.error("Registration error:", error);
    }
  };

  return (
    <>
      {contextHolder}
      <div style={{ 
        minHeight: '100vh', 
        backgroundColor: 'white',
        padding: '40px 60px'
      }}>
        {/* Logo Section */}
        <div style={{ marginBottom: 30 }}>
          <img
            src="/src/assets/logologin.png"
            alt="RIKEI Edu Logo"
            style={{ height: 50 }}
          />
        </div>

        {/* Heading */}
        <Title level={3} style={{ 
          marginBottom: 40,
          fontWeight: 600,
          fontSize: 24
        }}>
          ƒêƒÉng k√≠ ƒë·ªÉ c√≥ th·ªÉ ti·∫øp c·∫≠n ngu·ªìn nh√¢n l·ª±c ch·∫•t l∆∞·ª£ng cao
        </Title>

        {/* Registration Form */}
        <Form
          form={form}
          layout="vertical"
          onFinish={onFinish}
        >
          <Row gutter={[60, 0]}>
            {/* Left Column - Account Information */}
            <Col xs={24} md={12}>
              <div style={{ 
                borderLeft: '4px solid #c41e3a',
                paddingLeft: 16,
                marginBottom: 24
              }}>
                <Title level={5} style={{ 
                  margin: 0,
                  fontWeight: 600,
                  fontSize: 16
                }}>
                  Th√¥ng tin t√†i kho·∫£n
                </Title>
              </div>
              
              <Form.Item label="H·ªç t√™n" name="fullName" rules={rules}>
                <Input placeholder="Nh·∫≠p h·ªç t√™n" size="large" />
              </Form.Item>

              <Form.Item
                label="Email"
                name="email"
                rules={[
                  ...rules,
                  {
                    type: "email",
                    message: "Email kh√¥ng h·ª£p l·ªá!",
                  },
                ]}
              >
                <Input placeholder="abc@gmail.com" size="large" />
              </Form.Item>

              <Form.Item
                label="Password"
                name="password"
                rules={[
                  ...rules,
                  {
                    min: 6,
                    message: "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!",
                  },
                ]}
              >
                <Input.Password
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  size="large"
                  iconRender={(visible) =>
                    visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />
                  }
                />
              </Form.Item>

              <Form.Item
                label="Confirm password"
                name="confirmPassword"
                rules={[
                  ...rules,
                  {
                    min: 6,
                    message: "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!",
                  },
                ]}
              >
                <Input.Password
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  size="large"
                  iconRender={(visible) =>
                    visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />
                  }
                />
              </Form.Item>
            </Col>

            {/* Right Column - Company Information */}
            <Col xs={24} md={12}>
              <div style={{ 
                borderLeft: '4px solid #c41e3a',
                paddingLeft: 16,
                marginBottom: 24
              }}>
                <Title level={5} style={{ 
                  margin: 0,
                  fontWeight: 600,
                  fontSize: 16
                }}>
                  Th√¥ng tin doanh nghi·ªáp
                </Title>
              </div>
              
              <Form.Item label="C√¥ng ty" name="companyName" rules={rules}>
                <Input placeholder="T√™n c√¥ng ty" size="large" />
              </Form.Item>

              <Form.Item label="ƒê·ªãa ƒëi·ªÉm l√†m vi·ªác" name="address" rules={rules}>
                <Input placeholder="Ch·ªçn t·ªânh/th√†nh ph·ªë" size="large" />
              </Form.Item>

              <Form.Item label="S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá" name="phone" rules={rules}>
                <Input placeholder="0123456678" size="large" />
              </Form.Item>

              <Form.Item
                label="Email c√¥ng ty"
                name="companyEmail"
                rules={[
                  ...rules,
                  {
                    type: "email",
                    message: "Email kh√¥ng h·ª£p l·ªá!",
                  },
                ]}
              >
                <Input placeholder="abc@company.com" size="large" />
              </Form.Item>
            </Col>
          </Row>

          <div style={{ 
            maxWidth: 340,
            margin: '40px auto 0'
          }}>
            <Form.Item style={{ marginBottom: 16 }}>
              <Button
                type="primary"
                htmlType="submit"
                block
                size="large"
                style={{
                  backgroundColor: "#c41e3a",
                  borderColor: "#c41e3a",
                  height: 48,
                  fontSize: 16,
                  fontWeight: 500
                }}
              >
                ƒêƒÉng k√≠
              </Button>
            </Form.Item>

            {/* Links */}
            <div style={{ textAlign: 'center' }}>
              <Text>
                ƒê√£ c√≥ t√†i kho·∫£n?{" "}
                <Text
                  onClick={() => navigate("/loginCompany")}
                  style={{ 
                    color: '#c41e3a', 
                    cursor: 'pointer', 
                    fontWeight: 500,
                    textDecoration: 'none'
                  }}
                >
                  ƒêƒÉng nh·∫≠p ngay
                </Text>
              </Text>
            </div>
          </div>
        </Form>
      </div>
    </>
  );
}

export default Register;
